/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Vault, VaultInterface } from "../../contracts/Vault";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_assetName",
        type: "string",
      },
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferAsset",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pauser",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "addPauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "asset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "changeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "onBehalfOf",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "getAddrInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "operator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "setDepositLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
    ],
    name: "setOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "val",
        type: "bool",
      },
    ],
    name: "setPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "setWithdrawLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gap",
        type: "uint256",
      },
    ],
    name: "setWithdrawTimeGap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setWithdrawable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawTimeGap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526402540be4006007556402540be400600855620151806009553480156200002a57600080fd5b506040516200168f3803806200168f8339810160408190526200004d91620001d8565b6200005833620000af565b600180556002805460ff1916905582516200007b906003906020860190620000ff565b50600480546001600160a01b039384166001600160a01b031991821617909155600580549290931691161790555062000318565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546200010d90620002db565b90600052602060002090601f0160209004810192826200013157600085556200017c565b82601f106200014c57805160ff19168380011785556200017c565b828001600101855582156200017c579182015b828111156200017c5782518255916020019190600101906200015f565b506200018a9291506200018e565b5090565b5b808211156200018a57600081556001016200018f565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b0381168114620001d357600080fd5b919050565b600080600060608486031215620001ee57600080fd5b83516001600160401b03808211156200020657600080fd5b818601915086601f8301126200021b57600080fd5b815181811115620002305762000230620001a5565b604051601f8201601f19908116603f011681019083821181831017156200025b576200025b620001a5565b816040528281526020935089848487010111156200027857600080fd5b600091505b828210156200029c57848201840151818301850152908301906200027d565b82821115620002ae5760008484830101525b9650620002c0915050868201620001bb565b93505050620002d260408501620001bb565b90509250925092565b600181811c90821680620002f057607f821691505b602082108114156200031257634e487b7160e01b600052602260045260246000fd5b50919050565b61136780620003286000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80638da5cb5b116100c3578063c9230c5d1161007c578063c9230c5d1461031c578063ecf7085814610331578063f2fde38b1461033a578063f848d5411461034d578063f851a44014610356578063ffc03d8d1461036957600080fd5b80638da5cb5b146102a85780638f283970146102b9578063b3ab15fb146102cc578063b9caf2cb146102df578063bdc8144b146102f6578063bedb86fb1461030957600080fd5b80635c921eb9116101155780635c921eb91461023e5780635c975abb146102515780636e553f65146102675780636ee548d11461027a578063715018a61461028d57806371a0d2f81461029557600080fd5b80632e1a7d4d146101525780633741ae9c1461016757806338d52e0f146101ed5780634abdf2e014610218578063570ca7351461022b575b600080fd5b6101656101603660046110b6565b61037c565b005b6101c86101753660046110eb565b6001600160a01b03166000908152600a6020908152604091829020825160808101845281548082526001830154938201849052600283015494820185905260039092015460609091018190529093919291565b6040805194855260208501939093529183015260608201526080015b60405180910390f35b600454610200906001600160a01b031681565b6040516001600160a01b0390911681526020016101e4565b6101656102263660046110b6565b610548565b600654610200906001600160a01b031681565b61016561024c366004611106565b610580565b60025460ff1660405190151581526020016101e4565b610165610275366004611130565b610611565b610165610288366004611106565b6107a5565b6101656108f9565b6101656102a33660046110b6565b61090d565b6000546001600160a01b0316610200565b6101656102c73660046110eb565b610945565b6101656102da3660046110eb565b61099a565b6102e860095481565b6040519081526020016101e4565b6101656103043660046110b6565b6109ef565b61016561031736600461116a565b610a27565b610324610a8d565b6040516101e491906111b3565b6102e860075481565b6101656103483660046110eb565b610b1b565b6102e860085481565b600554610200906001600160a01b031681565b6101656103773660046111e6565b610b91565b600260015414156103a85760405162461bcd60e51b815260040161039f9061121d565b60405180910390fd5b60026001556103b5610bef565b600081116103ee5760405162461bcd60e51b815260040161039f9060208082526004908201526304e6f20360e41b604082015260600190565b336000908152600a60205260409020600201548111156104465760405162461bcd60e51b815260206004820152601360248201527245786365656473207769746872617761626c6560681b604482015260640161039f565b600954336000908152600a602052604090206003015442916104679161126a565b8110156104b65760405162461bcd60e51b815260206004820152601c60248201527f4e6f742077697468696e2077697468647261772074696d652067617000000000604482015260640161039f565b60405182815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a2336000908152600a60205260408120600201805484929061050d908490611282565b9091555050336000818152600a60205260409020600301829055600454610540916001600160a01b039091169084610c35565b505060018055565b6005546001600160a01b0316336001600160a01b03161461057b5760405162461bcd60e51b815260040161039f90611299565b600855565b6005546001600160a01b0316336001600160a01b0316146105b35760405162461bcd60e51b815260040161039f90611299565b816001600160a01b03167f9ebd923e97d4ce72c1c254dcf6f6c9e2dff02701382ff17d7b0b6e8897c9aafb826040516105ee91815260200190565b60405180910390a260045461060d906001600160a01b03168383610c35565b5050565b600260015414156106345760405162461bcd60e51b815260040161039f9061121d565b6002600155610641610bef565b6000821161067a5760405162461bcd60e51b815260040161039f9060208082526004908201526304e6f20360e41b604082015260600190565b6007548211156106c45760405162461bcd60e51b8152602060048201526015602482015274115e18d959591cc819195c1bdcda5d081b1a5b5a5d605a1b604482015260640161039f565b6001600160a01b03811661070f5760405162461bcd60e51b81526020600482015260126024820152712ab73b30b634b21037b72132b430b63327b360711b604482015260640161039f565b806001600160a01b03167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c8360405161074a91815260200190565b60405180910390a261076a336004546001600160a01b0316903085610c9d565b6001600160a01b0381166000908152600a60205260408120838155600101805484929061079890849061126a565b9091555050600180555050565b600260015414156107c85760405162461bcd60e51b815260040161039f9061121d565b60026001556107d5610bef565b6006546001600160a01b0316336001600160a01b0316146108285760405162461bcd60e51b815260206004820152600d60248201526c4f70657261746f72206f6e6c7960981b604482015260640161039f565b6001600160a01b0382166000908152600a602052604090206001015481111561088b5760405162461bcd60e51b8152602060048201526015602482015274115e18d959591cc81d1bdd185b0819195c1bdcda5d605a1b604482015260640161039f565b6008548111156108d65760405162461bcd60e51b8152602060048201526016602482015275115e18d959591cc81dda5d1a191c985dc81b1a5b5a5d60521b604482015260640161039f565b6001600160a01b039091166000908152600a602052604090206002015560018055565b610901610cdb565b61090b6000610d35565b565b6005546001600160a01b0316336001600160a01b0316146109405760405162461bcd60e51b815260040161039f90611299565b600955565b6005546001600160a01b0316336001600160a01b0316146109785760405162461bcd60e51b815260040161039f90611299565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b0316336001600160a01b0316146109cd5760405162461bcd60e51b815260040161039f90611299565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b0316336001600160a01b031614610a225760405162461bcd60e51b815260040161039f90611299565b600755565b336000908152600b602052604090205460ff16610a745760405162461bcd60e51b815260206004820152600b60248201526a506175736572206f6e6c7960a81b604482015260640161039f565b8015610a8557610a82610d85565b50565b610a82610ddf565b60038054610a9a906112bd565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac6906112bd565b8015610b135780601f10610ae857610100808354040283529160200191610b13565b820191906000526020600020905b815481529060010190602001808311610af657829003601f168201915b505050505081565b610b23610cdb565b6001600160a01b038116610b885760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161039f565b610a8281610d35565b6005546001600160a01b0316336001600160a01b031614610bc45760405162461bcd60e51b815260040161039f90611299565b6001600160a01b03919091166000908152600b60205260409020805460ff1916911515919091179055565b60025460ff161561090b5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161039f565b6040516001600160a01b038316602482015260448101829052610c9890849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610e18565b505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610cd59085906323b872dd60e01b90608401610c61565b50505050565b6000546001600160a01b0316331461090b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161039f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610d8d610bef565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610dc23390565b6040516001600160a01b03909116815260200160405180910390a1565b610de7610eea565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33610dc2565b6000610e6d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610f339092919063ffffffff16565b805190915015610c985780806020019051810190610e8b91906112f8565b610c985760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161039f565b60025460ff1661090b5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161039f565b6060610f428484600085610f4c565b90505b9392505050565b606082471015610fad5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161039f565b6001600160a01b0385163b6110045760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161039f565b600080866001600160a01b031685876040516110209190611315565b60006040518083038185875af1925050503d806000811461105d576040519150601f19603f3d011682016040523d82523d6000602084013e611062565b606091505b509150915061107282828661107d565b979650505050505050565b6060831561108c575081610f45565b82511561109c5782518084602001fd5b8160405162461bcd60e51b815260040161039f91906111b3565b6000602082840312156110c857600080fd5b5035919050565b80356001600160a01b03811681146110e657600080fd5b919050565b6000602082840312156110fd57600080fd5b610f45826110cf565b6000806040838503121561111957600080fd5b611122836110cf565b946020939093013593505050565b6000806040838503121561114357600080fd5b82359150611153602084016110cf565b90509250929050565b8015158114610a8257600080fd5b60006020828403121561117c57600080fd5b8135610f458161115c565b60005b838110156111a257818101518382015260200161118a565b83811115610cd55750506000910152565b60208152600082518060208401526111d2816040850160208701611187565b601f01601f19169190910160400192915050565b600080604083850312156111f957600080fd5b611202836110cf565b915060208301356112128161115c565b809150509250929050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000821982111561127d5761127d611254565b500190565b60008282101561129457611294611254565b500390565b6020808252600a908201526941646d696e206f6e6c7960b01b604082015260600190565b600181811c908216806112d157607f821691505b602082108114156112f257634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561130a57600080fd5b8151610f458161115c565b60008251611327818460208701611187565b919091019291505056fea2646970667358221220f97585bc030dffe4039b697d3da1e3cb6f68eb4d6e56cc534a067042642bcd6564736f6c63430008090033";

type VaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vault__factory extends ContractFactory {
  constructor(...args: VaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _assetName: PromiseOrValue<string>,
    _asset: PromiseOrValue<string>,
    _admin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Vault> {
    return super.deploy(
      _assetName,
      _asset,
      _admin,
      overrides || {}
    ) as Promise<Vault>;
  }
  override getDeployTransaction(
    _assetName: PromiseOrValue<string>,
    _asset: PromiseOrValue<string>,
    _admin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _assetName,
      _asset,
      _admin,
      overrides || {}
    );
  }
  override attach(address: string): Vault {
    return super.attach(address) as Vault;
  }
  override connect(signer: Signer): Vault__factory {
    return super.connect(signer) as Vault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultInterface {
    return new utils.Interface(_abi) as VaultInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Vault {
    return new Contract(address, _abi, signerOrProvider) as Vault;
  }
}
