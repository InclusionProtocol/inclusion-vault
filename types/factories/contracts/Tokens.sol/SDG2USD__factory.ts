/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SDG2USD,
  SDG2USDInterface,
} from "../../../contracts/Tokens.sol/SDG2USD";

const _abi = [
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint80",
        name: "_roundId",
        type: "uint80",
      },
    ],
    name: "getRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101cc806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063313ce5671461005c57806354fd4d50146100705780637284e4161461007f5780639a6fc8f5146100ac578063feaf968c146100ff575b600080fd5b604051600881526020015b60405180910390f35b60405160018152602001610067565b604080518082018252600b81526a6d6f636b206f7261636c6560a81b60208201529051610067919061010e565b6100c86100ba366004610163565b506000908190819081908190565b6040805169ffffffffffffffffffff968716815260208101959095528401929092526060830152909116608082015260a001610067565b600063044aa2008180806100c8565b600060208083528351808285015260005b8181101561013b5785810183015185820160400152820161011f565b8181111561014d576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561017557600080fd5b813569ffffffffffffffffffff8116811461018f57600080fd5b939250505056fea26469706673582212208566ff27c15f491599ee2174eb32447ca9119a8a9c2928a3eb448ba55d6e597d64736f6c63430008090033";

type SDG2USDConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SDG2USDConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SDG2USD__factory extends ContractFactory {
  constructor(...args: SDG2USDConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SDG2USD> {
    return super.deploy(overrides || {}) as Promise<SDG2USD>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SDG2USD {
    return super.attach(address) as SDG2USD;
  }
  override connect(signer: Signer): SDG2USD__factory {
    return super.connect(signer) as SDG2USD__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SDG2USDInterface {
    return new utils.Interface(_abi) as SDG2USDInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SDG2USD {
    return new Contract(address, _abi, signerOrProvider) as SDG2USD;
  }
}
